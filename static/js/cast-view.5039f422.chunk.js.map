{"version":3,"sources":["components/MovieDetailsPage/MovieAddInfo/Cast/CastListItem/CastListItem.module.scss","components/MovieDetailsPage/MovieAddInfo/Cast/CastList/CastList.module.scss","images/noImage.png","components/MovieDetailsPage/MovieAddInfo/Cast/CastListItem/CastListItem.js","components/MovieDetailsPage/MovieAddInfo/Cast/CastList/CastList.js","views/CastView.js"],"names":["module","exports","Cast","original_name","character","profile_path","className","styles","src","NoPhoto","alt","PhotoCast","Name","Character","defaultProps","CastList","actors","map","credit_id","CastView","movieId","useParams","useState","setActors","loading","setLoading","error","setError","useEffect","moviesAPI","fetchCastMovie","then","cast","length","catch","console","log","Error","errorContent","LoaderSpinner"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,UAAY,gCAAgC,KAAO,2BAA2B,UAAY,kC,oBCA9ID,EAAOC,QAAU,CAAC,SAAW,6B,kICDd,MAA0B,oC,yBCO1B,SAASC,EAAT,GAA2D,IAA3CC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aACvD,OACE,qBAAIC,UAAWC,IAAOL,KAAtB,UACE,qBACEM,IACEH,EAAY,0CAC2BA,GACnCI,EAENC,IAAKP,EACLG,UAAWC,IAAOI,YAIpB,oBAAIL,UAAWC,IAAOK,KAAtB,SAA6BT,IAC7B,mBAAGG,UAAWC,IAAOM,UAArB,SAAiCT,OAKvCF,EAAKY,aAAe,CAClBT,aAAcI,G,sBCpBD,SAASM,EAAT,GAA+B,IAAXC,EAAU,EAAVA,OACjC,OACE,oBAAIV,UAAWC,IAAOQ,SAAtB,SAEIC,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,UAAWf,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,aAAxC,OACT,cAACH,EAAD,CAEEgB,UAAWA,EACXf,cAAeA,EACfC,UAAWA,EACXC,aAAcA,GAJTa,QCLF,SAASC,IACtB,IAAQC,EAAYC,cAAZD,QAER,EAA4BE,mBAAS,MAArC,mBAAON,EAAP,KAAeO,EAAf,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,qBAAU,WACRH,GAAW,GACXI,IACGC,eAAeV,GACfW,MAAK,SAAAC,GACgB,IAAhBA,EAAKC,QACPN,EAAS,0CAEXJ,EAAUS,GACVP,GAAW,MAEZS,OAAM,SAAAR,GACLS,QAAQC,IAAIV,GACZC,EAAS,0DACTF,GAAW,QAEd,CAACL,IAGF,qCACGM,GAAS,cAACW,EAAA,EAAD,CAAOC,aAAcZ,IAC9BF,GAAW,cAACe,EAAA,EAAD,IAEXvB,GAAU,cAACD,EAAD,CAAUC,OAAQA","file":"static/js/cast-view.5039f422.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cast\":\"CastListItem_Cast__354zo\",\"PhotoCast\":\"CastListItem_PhotoCast__1GBeW\",\"Name\":\"CastListItem_Name__Bcuex\",\"Character\":\"CastListItem_Character__2k9pD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CastList\":\"CastList_CastList__2i9K-\"};","export default __webpack_public_path__ + \"static/media/noImage.12e64bc7.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NoPhoto from '../../../../../images/noImage.png';\n\nimport styles from './CastListItem.module.scss';\n\nexport default function Cast({ original_name, character, profile_path }) {\n  return (\n    <li className={styles.Cast}>\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n            : NoPhoto\n        }\n        alt={original_name}\n        className={styles.PhotoCast}\n        // width={200}\n        // height={283}\n      />\n      <h4 className={styles.Name}>{original_name}</h4>\n      <p className={styles.Character}>{character}</p>\n    </li>\n  );\n}\n\nCast.defaultProps = {\n  profile_path: NoPhoto,\n};\n\nCast.propTypes = {\n  original_name: PropTypes.string.isRequired,\n  // credit_id: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  profile_path: PropTypes.string,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport CastListItem from '../CastListItem';\n\nimport styles from './CastList.module.scss';\n\nexport default function CastList({ actors }) {\n  return (\n    <ul className={styles.CastList}>\n      {\n        actors.map(({ credit_id, original_name, character, profile_path }) => (\n          <CastListItem\n            key={credit_id}\n            credit_id={credit_id}\n            original_name={original_name}\n            character={character}\n            profile_path={profile_path}\n          />\n        ))\n        // .filter(({ id }, i, self) => self.indexOf(id) === i)\n      }\n    </ul>\n  );\n}\n\nCastList.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      credit_id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport moviesAPI from '../api/movies-api';\n\nimport LoaderSpinner from '../components/LoaderSpinner';\nimport Error from '../components/Error';\nimport CastList from '../components/MovieDetailsPage/MovieAddInfo/Cast/CastList';\n\nexport default function CastView() {\n  const { movieId } = useParams();\n\n  const [actors, setActors] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    moviesAPI\n      .fetchCastMovie(movieId)\n      .then(cast => {\n        if (cast.length === 0) {\n          setError('We don`t have any cast for this movie.');\n        }\n        setActors(cast);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setError('Whoops, something went wrong. Enter your request again');\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <Error errorContent={error} />}\n      {loading && <LoaderSpinner />}\n\n      {actors && <CastList actors={actors} />}\n    </>\n  );\n}\n"],"sourceRoot":""}